diff --git a/src/Plugin/facets/facet_source/CoreViewsExposedFilter.php b/src/Plugin/facets/facet_source/CoreViewsExposedFilter.php
index 07ce6f0..5d19884 100644
--- a/src/Plugin/facets/facet_source/CoreViewsExposedFilter.php
+++ b/src/Plugin/facets/facet_source/CoreViewsExposedFilter.php
@@ -288,11 +288,20 @@ class CoreViewsExposedFilter extends CoreViewsFacetSourceBase {
   public function getDataDefinition($field_name) {
     $this->view->build($this->pluginDefinition['view_display']);
     $definition = $this->view->filter[$field_name]->definition;
-    $original_field_name = $this->getOriginalFieldName($definition);
-    $field_definition = $this->entityFieldManager->getFieldStorageDefinitions($definition['entity_type']);
+    //$original_field_name = $this->getOriginalFieldName($definition);
+    // Custom code.
+    $real_field = $original_field_name = $this->view->filter[$field_name]->realField;
+    $x = $definition['entity_type'];
+    $properties = $field_definition = $this->entityFieldManager->getBaseFieldDefinitions($definition['entity_type']);
+    // End custom code.
+
+    //$field_definition = $this->entityFieldManager->getFieldStorageDefinitions($definition['entity_type']);
     if (isset($field_definition[$original_field_name])) {
       $property_definitions = $field_definition[$original_field_name]->getPropertyDefinitions();
       $field_type = $field_definition[$original_field_name]->getType();
+      // Custom code.
+      if ($field_type === 'language') {$field_type = 'string';}
+      // End custom code.
       foreach ($property_definitions as $property_definition) {
         if ($field_type === $property_definition->getDataType()) {
           return $property_definition;
